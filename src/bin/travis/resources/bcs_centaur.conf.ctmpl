{{with $cromwellAlicloudAuth := vault (printf "secret/dsde/cromwell/common/cromwell-alicloud-auth")}}
include required(classpath("application"))

backend {
  default = "BCS"

  providers {
    BCS {
      actor-factory = "cromwell.backend.impl.bcs.BcsBackendLifecycleActorFactory"
      config {
        root = "oss://broad-test/cromwell-dir"
        region = "cn-hangzhou"
        access-id = "{{$cromwellAlicloudAuth.Data.access_id}}"
        access-key = "{{$cromwellAlicloudAuth.Data.access_key}}"

        filesystems {
          oss {
            auth {
              endpoint = "oss-cn-hangzhou.aliyuncs.com"
              access-id = "{{$cromwellAlicloudAuth.Data.access_id}}"
              access-key = "{{$cromwellAlicloudAuth.Data.access_key}}"
            }
          }
        }

        default-runtime-attributes {
          autoReleaseJob: true
          cluster: "OnDemand ecs.sn1.medium img-ubuntu"
          continueOnReturnCode: 0
          # TODO: the ubuntu image must be pushed into oss://broad-test/registry/ubuntu. Can we simplify this for users?
          # docker: "ubuntu/latest oss://broad-test/registry/ubuntu/"
          failOnStderr: false
          # TODO: the ubuntu image must be pushed into oss://broad-test/registry/ubuntu. For now ignore docker
          ignoreDocker: true
          reserveOnFail: false
          timeout: 3000
          vpc: "192.168.1.0/24"
          workerPath: ${user.dir}/supportedBackends/bcs/src/main/scala/cromwell/backend/impl/bcs/worker.tar.gz
        }
      }
    }
  }
}

{{end}}
